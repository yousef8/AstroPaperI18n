---
import Card from "@components/Card";
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import { LOCALE, SITE } from "@config";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import getPostsByGroupCondition from "@utils/getPostsByGroupCondition";
import { getCollection } from "astro:content";
import { translateFor } from "@i18n/utils";
import getRelativePath from "@utils/getRelativePath";

// Redirect to 404 page if `showArchives` config is false
if (!SITE.showArchives) {
  return Astro.redirect(getRelativePath("/404"));
}

const posts = await getCollection("blog", ({ data }) => !data.draft);

const t = translateFor(Astro.currentLocale || LOCALE.defaultLocale);

type MonthKey =
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "6"
  | "7"
  | "8"
  | "9"
  | "10"
  | "11"
  | "12";
---

<Layout title={`${t("archives")} | ${t("site.title")}`}>
  <Header activeNav="archives" />
  <Main pageTitle={t("archives")} pageDesc={t("archives.desc")}>
    {
      Object.entries(
        getPostsByGroupCondition(posts, post =>
          post.data.pubDatetime.getFullYear()
        )
      )
        .sort(([yearA], [yearB]) => Number(yearB) - Number(yearA))
        .map(([year, yearGroup]) => (
          <div>
            <span class="text-2xl font-bold">{year}</span>
            <sup class="text-sm">{yearGroup.length}</sup>
            {Object.entries(
              getPostsByGroupCondition(
                yearGroup,
                post => post.data.pubDatetime.getMonth() + 1
              )
            )
              .sort(([monthA], [monthB]) => Number(monthB) - Number(monthA))
              .map(([month, monthGroup]) => (
                <div class="flex flex-col sm:flex-row">
                  <div class="mt-6 min-w-36 text-lg sm:my-6">
                    <span class="font-bold">
                      {t(`date.month.${month as MonthKey}`)}
                    </span>
                    <sup class="text-xs">{monthGroup.length}</sup>
                  </div>
                  <ul>
                    {monthGroup
                      .sort(
                        (a, b) =>
                          Math.floor(
                            new Date(b.data.pubDatetime).getTime() / 1000
                          ) -
                          Math.floor(
                            new Date(a.data.pubDatetime).getTime() / 1000
                          )
                      )
                      .map(({ data, slug }) => (
                        <Card
                          href={`/posts/${slug}`}
                          frontmatter={data}
                          currentLocale={
                            Astro.currentLocale || LOCALE.defaultLocale
                          }
                        />
                      ))}
                  </ul>
                </div>
              ))}
          </div>
        ))
    }
  </Main>

  <Footer />
</Layout>
